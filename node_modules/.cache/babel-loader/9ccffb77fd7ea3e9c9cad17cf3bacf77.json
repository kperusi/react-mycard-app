{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\PC\\\\MyDocuments\\\\Html\\\\react-mycard-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\MyDocuments\\\\Html\\\\react-mycard-app\\\\src\\\\Forms.js\";\nimport React, { useState } from \"react\";\nimport './page.css';\nimport { formatedNumber } from \"./FormatedNumber\";\nimport { CheckForLetters } from \"./CheckforLetters\";\n\nfunction Forms(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      cardNumber = _useState2[0],\n      setCardNumber = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      wrongFormatStyle = _useState4[0],\n      setWrongFormatStyle = _useState4[1];\n\n  var onchange = function onchange(e) {\n    setCardNumber(formatedNumber(e.target.value));\n  };\n\n  var wrongFormat = function wrongFormat() {\n    if (CheckForLetters) {\n      console.log('letters');\n      setWrongFormatStyle('wrong-format-border');\n    }\n  };\n\n  wrongFormat;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"holdername\",\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"CARDHOLDER NAME\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"holdername\",\n    placeholder: \"e.g Jane Appleseed\",\n    onInput: props.nameHandler,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"card-number\",\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"CARD NUMBER\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"card-number-input \".concat(wrongFormatStyle),\n    placeholder: \"e.g 1234 5678 9123 0000\",\n    onInput: props.enterNumber,\n    onChange: onchange,\n    value: cardNumber,\n    required: true,\n    autoComplete: \"none\",\n    type: 'text',\n    maxLength: 19,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), CheckForLetters(cardNumber) && wrongFormat && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"number-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 52\n    }\n  }, \"Wrong format, numbers only\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-labels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"card-date-month\",\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"EXP.DATE(MM/YY)\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"card-date-year\",\n    className: \"label\",\n    style: {\n      marginRight: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"CVC\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"card-date-month\",\n    placeholder: \"MM\",\n    onInput: props.enterMonth,\n    inputMode: \"numeric\",\n    onChange: props.getMonthValue,\n    required: true,\n    maxLength: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"card-date-year\",\n    placeholder: \"YY\",\n    onInput: props.enterYear,\n    inputMode: \"numeric\",\n    onChange: props.checkForN,\n    maxLength: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"cvc\",\n    placeholder: \"e.g 123\",\n    onInput: props.enterCvc,\n    onChange: props.getCvcValue,\n    inputMode: \"numeric\",\n    maxLength: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-grp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"date-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, props.errorText), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cvc-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, props.cvcErrorText)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"form-button\",\n    onClick: function onClick() {\n      props.formClickHandler();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"confirm\"));\n}\n\nexport default Forms;","map":{"version":3,"names":["React","useState","formatedNumber","CheckForLetters","Forms","props","cardNumber","setCardNumber","wrongFormatStyle","setWrongFormatStyle","onchange","e","target","value","wrongFormat","console","log","nameHandler","enterNumber","marginRight","enterMonth","getMonthValue","enterYear","checkForN","enterCvc","getCvcValue","errorText","cvcErrorText","formClickHandler"],"sources":["C:/Users/PC/MyDocuments/Html/react-mycard-app/src/Forms.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './page.css'\r\nimport { formatedNumber } from \"./FormatedNumber\";\r\nimport { CheckForLetters } from \"./CheckforLetters\";\r\n\r\nfunction Forms(props) {\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [wrongFormatStyle, setWrongFormatStyle]=useState('')\r\n  \r\n\r\n\r\n  \r\n  const onchange = (e) => {\r\n    setCardNumber(formatedNumber(e.target.value));\r\n    \r\n  };\r\nconst wrongFormat=()=>{\r\n  if (CheckForLetters){\r\n  console.log('letters')\r\n  setWrongFormatStyle('wrong-format-border')\r\n\r\n}\r\n}\r\nwrongFormat\r\n\r\n  return (\r\n    <div className=\"forms\">\r\n      <label htmlFor=\"holdername\" className=\"label\">CARDHOLDER NAME</label>\r\n\r\n      <input\r\n        className=\"holdername\"\r\n        placeholder=\"e.g Jane Appleseed\"\r\n        onInput={props.nameHandler}\r\n        type ='text'\r\n\r\n      ></input>\r\n\r\n      <label htmlFor=\"card-number\"className=\"label\">CARD NUMBER</label>\r\n\r\n      <input\r\n        className={`card-number-input ${wrongFormatStyle}`}\r\n        placeholder=\"e.g 1234 5678 9123 0000\"\r\n        onInput={props.enterNumber}\r\n        onChange={onchange}\r\n        value={cardNumber}\r\n        required\r\n        autoComplete=\"none\"\r\n        type={'text'}\r\n        maxLength={19}\r\n      ></input>\r\n      {CheckForLetters(cardNumber)&& wrongFormat &&<p className=\"number-error\">Wrong format, numbers only</p>}\r\n\r\n      <div className=\"date-labels\">\r\n        <label htmlFor=\"card-date-month\" className=\"label\" >EXP.DATE(MM/YY)</label>\r\n        <label htmlFor=\"card-date-year\"className=\"label\" style={{ marginRight: \"30px\" }}>\r\n          CVC\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"date-container\">\r\n        <input\r\n          className=\"card-date-month\"\r\n          placeholder=\"MM\"\r\n          onInput={props.enterMonth}\r\n          inputMode=\"numeric\"\r\n          onChange={props.getMonthValue}\r\n          required\r\n          maxLength={2}\r\n        \r\n        ></input>\r\n\r\n        <input\r\n          className=\"card-date-year\"\r\n          placeholder=\"YY\"\r\n          onInput={props.enterYear}\r\n          inputMode='numeric'\r\n          onChange={props.checkForN}\r\n          maxLength={2}\r\n        ></input>\r\n\r\n        <input\r\n          className=\"cvc\"\r\n          placeholder=\"e.g 123\"\r\n          onInput={props.enterCvc}\r\n          onChange={props.getCvcValue}\r\n          inputMode=\"numeric\"\r\n          maxLength={3}\r\n        ></input>\r\n      </div>\r\n      <div className=\"error-grp\">\r\n        <p className=\"date-error\">{props.errorText}</p>\r\n        <p className=\"cvc-error\">{props.cvcErrorText}</p>\r\n      </div>\r\n      <button\r\n        className=\"form-button\"\r\n        onClick={() => {\r\n          props.formClickHandler();\r\n        }}\r\n      >\r\n        confirm\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default Forms;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}