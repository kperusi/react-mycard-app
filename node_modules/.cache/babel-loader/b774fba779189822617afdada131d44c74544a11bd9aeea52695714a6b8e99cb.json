{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\MyDocuments\\\\Html\\\\react-mycard-app\\\\react-mycard-app\\\\src\\\\Forms.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forms(props) {\n  _s();\n  const [cardNumber, setCardNumber] = useState(\"\");\n\n  // function to format number\n\n  function formatedNumber(values) {\n    let val = values.replace(/\\D/g, \"\");\n    let val2 = val.match(/(\\d{0,4})?(\\d{0,4})?(\\d{0,4})?(\\d{0,4})/);\n    let result = \"\";\n    if (val2[1]) {\n      result = val2[1];\n    }\n    if (val2[2]) {\n      result = result.concat(\" \" + val2[2]);\n    }\n    if (val2[3]) {\n      result = result.concat(\" \" + val2[3]);\n    }\n    if (val2[4]) {\n      result = result.concat(\" \" + val2[4]);\n    }\n    return result;\n  }\n  const onchange = e => {\n    setCardNumber(formatedNumber(e.target.value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forms\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"holdername\",\n      children: \"CARDHOLDER NAME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"holdername\",\n      placeholder: \"e.g Jane Appleseed\",\n      onInput: props.nameHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"card-number\",\n      children: \"CARD NUMBER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"card-number-input\",\n      placeholder: \"e.g 1234 5678 9123 0000\",\n      onInput: props.enterNumber,\n      onChange: onchange,\n      value: cardNumber,\n      required: true,\n      autoComplete: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-labels\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"card-date-month\",\n        children: \"EXP.DATE(MM/YY)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"card-date-year\",\n        style: {\n          marginRight: \"30px\"\n        },\n        children: \"CVC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"card-date-month\",\n        placeholder: \"MM\",\n        onInput: props.enterMonth,\n        type: \"number\",\n        onChange: props.getMonthValue,\n        required: true,\n        autoComplete: \"none\",\n        autoCorrect: \"none\",\n        maxLength: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"card-date-year\",\n        placeholder: \"YY\",\n        onInput: props.enterYear,\n        type: \"number\",\n        onChange: props.checkForN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"cvc\",\n        placeholder: \"e.g 123\",\n        onInput: props.enterCvc,\n        onChange: props.getCvcValue,\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-grp\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"date-error\",\n        children: props.errorText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cvc-error\",\n        children: props.cvcErrorText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"form-button\",\n      onClick: () => {\n        props.formClickHandler();\n      },\n      children: \"confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Forms, \"gwU6PpkWbXCjHaqMSCvVVPFuqwI=\");\n_c = Forms;\nexport default Forms;\nvar _c;\n$RefreshReg$(_c, \"Forms\");","map":{"version":3,"names":["React","useState","Forms","props","cardNumber","setCardNumber","formatedNumber","values","val","replace","val2","match","result","concat","onchange","e","target","value","nameHandler","enterNumber","marginRight","enterMonth","getMonthValue","enterYear","checkForN","enterCvc","getCvcValue","errorText","cvcErrorText","formClickHandler"],"sources":["C:/Users/PC/MyDocuments/Html/react-mycard-app/react-mycard-app/src/Forms.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Forms(props) {\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n\r\n  // function to format number\r\n\r\n  function formatedNumber(values) {\r\n    let val = values.replace(/\\D/g, \"\");\r\n    let val2 = val.match(/(\\d{0,4})?(\\d{0,4})?(\\d{0,4})?(\\d{0,4})/);\r\n\r\n    let result = \"\";\r\n    if (val2[1]) {\r\n      result = val2[1];\r\n    }\r\n\r\n    if (val2[2]) {\r\n      result = result.concat(\" \" + val2[2]);\r\n    }\r\n    if (val2[3]) {\r\n      result = result.concat(\" \" + val2[3]);\r\n    }\r\n    if (val2[4]) {\r\n      result = result.concat(\" \" + val2[4]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const onchange = (e) => {\r\n    setCardNumber(formatedNumber(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"forms\">\r\n      <label htmlFor=\"holdername\">CARDHOLDER NAME</label>\r\n\r\n      <input\r\n        className=\"holdername\"\r\n        placeholder=\"e.g Jane Appleseed\"\r\n        onInput={props.nameHandler}\r\n      ></input>\r\n\r\n      <label htmlFor=\"card-number\">CARD NUMBER</label>\r\n\r\n      <input\r\n        className=\"card-number-input\"\r\n        placeholder=\"e.g 1234 5678 9123 0000\"\r\n        onInput={props.enterNumber}\r\n        onChange={onchange}\r\n        value={cardNumber}\r\n        required\r\n        autoComplete=\"none\"\r\n      ></input>\r\n\r\n      <div className=\"date-labels\">\r\n        <label htmlFor=\"card-date-month\">EXP.DATE(MM/YY)</label>\r\n        <label htmlFor=\"card-date-year\" style={{ marginRight: \"30px\" }}>\r\n          CVC\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"date-container\">\r\n        <input\r\n          className=\"card-date-month\"\r\n          placeholder=\"MM\"\r\n          onInput={props.enterMonth}\r\n          type=\"number\"\r\n          onChange={props.getMonthValue}\r\n          required\r\n          autoComplete=\"none\"\r\n          autoCorrect=\"none\"\r\n          maxLength=\"3\"\r\n        ></input>\r\n\r\n        <input\r\n          className=\"card-date-year\"\r\n          placeholder=\"YY\"\r\n          onInput={props.enterYear}\r\n          type=\"number\"\r\n          onChange={props.checkForN}\r\n        ></input>\r\n\r\n        <input\r\n          className=\"cvc\"\r\n          placeholder=\"e.g 123\"\r\n          onInput={props.enterCvc}\r\n          onChange={props.getCvcValue}\r\n          type=\"number\"\r\n        ></input>\r\n      </div>\r\n      <div className=\"error-grp\">\r\n        <p className=\"date-error\">{props.errorText}</p>\r\n        <p className=\"cvc-error\">{props.cvcErrorText}</p>\r\n      </div>\r\n      <button\r\n        className=\"form-button\"\r\n        onClick={() => {\r\n          props.formClickHandler();\r\n        }}\r\n      >\r\n        confirm\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default Forms;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}