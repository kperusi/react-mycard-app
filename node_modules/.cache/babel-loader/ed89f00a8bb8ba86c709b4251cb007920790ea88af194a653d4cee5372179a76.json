{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\MyDocuments\\\\Html\\\\react-mycard-app\\\\src\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import img1 from './images/icon-complete.svg'\nimport './page.css';\nimport Forms from \"./Forms\";\nimport Confirmation from \"./confirmation\";\nimport Cardfront from \"./Cardfront\";\nimport CardBack from \"./CardBack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main(props) {\n  _s();\n  const [visibility, setVisibility] = React.useState(false);\n  const [name, setName] = useState(\"JANE APPLESEED\");\n  const [number, setNumber] = useState(\"0000 0000 0000 0000\");\n  const [month, setMonth] = useState(\"00\");\n  const [inputMonth, setInputMonth] = useState(\"MM\");\n  const [year, setYear] = useState(\"00\");\n  const [cvc, setCvc] = useState(\"000\");\n  const [n, setN] = useState(\"\");\n  const [monthValue, setMonthValue] = useState(\"\");\n  const [cvcValue, setCvcValue] = useState(\"\");\n  const [errorText, setErrorText] = useState(\"\");\n  const [cvcErrorText, setCvcErrorText] = useState('');\n  const formClickHandler = e => {\n    if (n === \"\") {\n      setErrorText('Can\\'t be blank');\n    }\n    if (cvcValue === \"\") {\n      setCvcErrorText('Can\\'t be blank');\n    }\n    if (n === \"\" || monthValue === \"\" || cvcValue === \"\") {\n      console.log(`this is n from button click is empty ${n}`);\n      setVisibility(false);\n    } else {\n      setVisibility(true);\n    }\n  };\n  const confirmationClickHandler = () => {\n    setVisibility(false);\n    setCvcValue('');\n    setMonthValue('');\n    setCvcErrorText('');\n    setN('');\n    setErrorText('');\n    setMonth('00');\n    setYear('00');\n    setName('JANE APPLESEED');\n    setNumber('0000 0000 0000 0000');\n    setCvc('000');\n  };\n  const nameHandler = e => {\n    setName(e.target.value.toUpperCase());\n  };\n  const EnterNumberHandler = e => {\n    setNumber(e.target.value);\n  };\n  const EnterMonthHandler = e => {\n    setMonth(e.target.value);\n    if (inputMonth.length < 3) {\n      setInputMonth(e.target.value);\n    }\n  };\n  const EnterYearHandler = e => {\n    setYear(e.target.value);\n  };\n  const EnterCvcHandler = e => {\n    setCvc(e.target.value);\n  };\n  const getN = e => {\n    setN(e.target.value);\n  };\n  const getMonthValue = e => {\n    setMonthValue(e.target.value);\n  };\n  const getCvcValue = e => {\n    setCvcValue(e.target.value);\n  };\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [\"this is main\", /*#__PURE__*/_jsxDEV(CardBack, {\n      cvc: cvc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cardfront, {\n      name: name,\n      number: number,\n      month: month,\n      year: year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), visibility ? /*#__PURE__*/_jsxDEV(Confirmation, {\n      confirmationClickHandler: confirmationClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Forms, {\n      enterNumber: EnterNumberHandler,\n      nameHandler: nameHandler,\n      formClickHandler: formClickHandler,\n      enterMonth: EnterMonthHandler,\n      month: inputMonth,\n      enterYear: EnterYearHandler,\n      enterCvc: EnterCvcHandler,\n      checkForN: getN,\n      getMonthValue: getMonthValue,\n      getCvcValue: getCvcValue,\n      errorText: errorText,\n      cvcErrorText: cvcErrorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"/kQRDUYra1CdgA8Svl7ERxlSWsE=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","Forms","Confirmation","Cardfront","CardBack","Main","props","visibility","setVisibility","name","setName","number","setNumber","month","setMonth","inputMonth","setInputMonth","year","setYear","cvc","setCvc","n","setN","monthValue","setMonthValue","cvcValue","setCvcValue","errorText","setErrorText","cvcErrorText","setCvcErrorText","formClickHandler","e","console","log","confirmationClickHandler","nameHandler","target","value","toUpperCase","EnterNumberHandler","EnterMonthHandler","length","EnterYearHandler","EnterCvcHandler","getN","getMonthValue","getCvcValue"],"sources":["C:/Users/PC/MyDocuments/Html/react-mycard-app/src/Main.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n// import img1 from './images/icon-complete.svg'\r\nimport './page.css'\r\nimport Forms from \"./Forms\";\r\nimport Confirmation from \"./confirmation\";\r\nimport Cardfront from \"./Cardfront\";\r\nimport CardBack from \"./CardBack\";\r\n\r\nfunction Main(props) {\r\n  const [visibility, setVisibility] = React.useState(false);\r\n  const [name, setName] = useState(\"JANE APPLESEED\");\r\n  const [number, setNumber] = useState(\"0000 0000 0000 0000\");\r\n  const [month, setMonth] = useState(\"00\");\r\n  const [inputMonth, setInputMonth] = useState(\"MM\");\r\n  const [year, setYear] = useState(\"00\");\r\n  const [cvc, setCvc] = useState(\"000\");\r\n  const [n, setN] = useState(\"\");\r\n  const [monthValue, setMonthValue] = useState(\"\");\r\n  const [cvcValue, setCvcValue] = useState(\"\");\r\n  const [errorText, setErrorText] = useState(\"\");\r\n  const [cvcErrorText, setCvcErrorText]=useState('')\r\n\r\n  const formClickHandler = (e) => {\r\n    if (n === \"\") {\r\n      setErrorText('Can\\'t be blank');\r\n    }\r\n    if (cvcValue === \"\") {\r\n      setCvcErrorText('Can\\'t be blank');\r\n    }\r\n\r\n    if (n === \"\" || monthValue === \"\" || cvcValue === \"\") {\r\n      console.log(`this is n from button click is empty ${n}`);\r\n      setVisibility(false);\r\n    } else {\r\n      setVisibility(true);\r\n    }\r\n    \r\n  };\r\n\r\n  const confirmationClickHandler = () => {\r\n    setVisibility(false);\r\n    setCvcValue('')\r\n    setMonthValue('')\r\n    setCvcErrorText('')\r\n    setN('')\r\n    setErrorText('')\r\n    setMonth('00')\r\n    setYear('00')\r\n    setName('JANE APPLESEED')\r\n    setNumber('0000 0000 0000 0000')\r\n    setCvc('000')\r\n  };\r\n\r\n  const nameHandler = (e) => {\r\n  \r\n    setName((e.target.value).toUpperCase());\r\n  };\r\n\r\n  const EnterNumberHandler = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n  const EnterMonthHandler = (e) => {\r\n    setMonth(e.target.value);\r\n    if(inputMonth.length<3){\r\n      setInputMonth(e.target.value)\r\n   }\r\n    \r\n   \r\n  };\r\n  const EnterYearHandler = (e) => {\r\n    setYear(e.target.value);\r\n  };\r\n  const EnterCvcHandler = (e) => {\r\n    setCvc(e.target.value);\r\n  };\r\n  const getN = (e) => {\r\n    setN(e.target.value);\r\n  };\r\n\r\n  const getMonthValue = (e) => {\r\n    setMonthValue(e.target.value);\r\n  };\r\n  const getCvcValue = (e) => {\r\n    setCvcValue(e.target.value);\r\n  };\r\n\r\n  console.log(props)\r\n  return (\r\n    <div className=\"main\">\r\n      this is main\r\n      <CardBack cvc={cvc} />\r\n      <Cardfront name={name} number={number} month={month} year={year} />\r\n\r\n      {visibility ? (\r\n        <Confirmation confirmationClickHandler={confirmationClickHandler} />\r\n      ) : (\r\n        <Forms\r\n          enterNumber={EnterNumberHandler}\r\n          nameHandler={nameHandler}\r\n          formClickHandler={formClickHandler}\r\n          enterMonth={EnterMonthHandler}\r\n          month={inputMonth}\r\n          enterYear={EnterYearHandler}\r\n          enterCvc={EnterCvcHandler}\r\n          checkForN={getN}\r\n          getMonthValue={getMonthValue}\r\n          getCvcValue={getCvcValue}\r\n          errorText={errorText}\r\n          cvcErrorText={cvcErrorText}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}