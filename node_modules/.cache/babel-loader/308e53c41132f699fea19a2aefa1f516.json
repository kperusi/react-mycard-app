{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\PC\\\\MyDocuments\\\\Html\\\\react-mycard-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\MyDocuments\\\\Html\\\\react-mycard-app\\\\src\\\\Main.js\";\nimport React, { useState } from \"react\"; // import img1 from './images/icon-complete.svg'\n\nimport './page.css';\nimport Forms from \"./Forms\";\nimport Confirmation from \"./confirmation\";\nimport Cardfront from \"./Cardfront\";\nimport CardBack from \"./CardBack\";\n\nfunction Main(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visibility = _React$useState2[0],\n      setVisibility = _React$useState2[1];\n\n  var _useState = useState(\"JANE APPLESEED\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"0000 0000 0000 0000\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      number = _useState4[0],\n      setNumber = _useState4[1];\n\n  var _useState5 = useState(\"00\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      month = _useState6[0],\n      setMonth = _useState6[1];\n\n  var _useState7 = useState(\"MM\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      inputMonth = _useState8[0],\n      setInputMonth = _useState8[1];\n\n  var _useState9 = useState(\"00\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      year = _useState10[0],\n      setYear = _useState10[1];\n\n  var _useState11 = useState(\"000\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      cvc = _useState12[0],\n      setCvc = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      n = _useState14[0],\n      setN = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      monthValue = _useState16[0],\n      setMonthValue = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      cvcValue = _useState18[0],\n      setCvcValue = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      errorText = _useState20[0],\n      setErrorText = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      cvcErrorText = _useState22[0],\n      setCvcErrorText = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      nameError = _useState24[0],\n      setNameError = _useState24[1];\n\n  var formClickHandler = function formClickHandler(e) {\n    if (n === \"\") {\n      setErrorText('Can\\'t be blank');\n    }\n\n    if (cvcValue === \"\") {\n      setCvcErrorText('Can\\'t be blank');\n    }\n\n    if (n === \"\" || monthValue === \"\" || cvcValue === \"\") {\n      console.log(\"this is n from button click is empty \".concat(n));\n      setVisibility(false);\n    } else {\n      setVisibility(true);\n    }\n  };\n\n  var confirmationClickHandler = function confirmationClickHandler() {\n    setVisibility(false);\n    setCvcValue('');\n    setMonthValue('');\n    setCvcErrorText('');\n    setN('');\n    setErrorText('');\n    setMonth('00');\n    setYear('00');\n    setName('JANE APPLESEED');\n    setNumber('0000 0000 0000 0000');\n    setCvc('000');\n  };\n\n  var nameHandler = function nameHandler(e) {\n    setName(e.target.value.toUpperCase());\n  };\n\n  var EnterNumberHandler = function EnterNumberHandler(e) {\n    setNumber(e.target.value);\n  };\n\n  var EnterMonthHandler = function EnterMonthHandler(e) {\n    setMonth(e.target.value);\n\n    if (inputMonth.length < 3) {\n      setInputMonth(e.target.value);\n    }\n  };\n\n  var EnterYearHandler = function EnterYearHandler(e) {\n    setYear(e.target.value);\n  };\n\n  var EnterCvcHandler = function EnterCvcHandler(e) {\n    setCvc(e.target.value);\n  };\n\n  var getN = function getN(e) {\n    setN(e.target.value);\n  };\n\n  var getMonthValue = function getMonthValue(e) {\n    setMonthValue(e.target.value);\n  };\n\n  var getCvcValue = function getCvcValue(e) {\n    setCvcValue(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardBack, {\n    cvc: cvc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Cardfront, {\n    name: name,\n    number: number,\n    month: month,\n    year: year,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), visibility ? /*#__PURE__*/React.createElement(Confirmation, {\n    confirmationClickHandler: confirmationClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Forms, {\n    enterNumber: EnterNumberHandler,\n    nameHandler: nameHandler,\n    formClickHandler: formClickHandler,\n    enterMonth: EnterMonthHandler,\n    month: inputMonth,\n    enterYear: EnterYearHandler,\n    enterCvc: EnterCvcHandler,\n    checkForN: getN,\n    getMonthValue: getMonthValue,\n    getCvcValue: getCvcValue,\n    errorText: errorText,\n    cvcErrorText: cvcErrorText,\n    namaError: n,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Main;","map":{"version":3,"names":["React","useState","Forms","Confirmation","Cardfront","CardBack","Main","props","visibility","setVisibility","name","setName","number","setNumber","month","setMonth","inputMonth","setInputMonth","year","setYear","cvc","setCvc","n","setN","monthValue","setMonthValue","cvcValue","setCvcValue","errorText","setErrorText","cvcErrorText","setCvcErrorText","nameError","setNameError","formClickHandler","e","console","log","confirmationClickHandler","nameHandler","target","value","toUpperCase","EnterNumberHandler","EnterMonthHandler","length","EnterYearHandler","EnterCvcHandler","getN","getMonthValue","getCvcValue"],"sources":["C:/Users/PC/MyDocuments/Html/react-mycard-app/src/Main.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n// import img1 from './images/icon-complete.svg'\r\nimport './page.css'\r\nimport Forms from \"./Forms\";\r\nimport Confirmation from \"./confirmation\";\r\nimport Cardfront from \"./Cardfront\";\r\nimport CardBack from \"./CardBack\";\r\n\r\nfunction Main(props) {\r\n  \r\n  const [visibility, setVisibility] = React.useState(false);\r\n  const [name, setName] = useState(\"JANE APPLESEED\");\r\n  const [number, setNumber] = useState(\"0000 0000 0000 0000\");\r\n  const [month, setMonth] = useState(\"00\");\r\n  const [inputMonth, setInputMonth] = useState(\"MM\");\r\n  const [year, setYear] = useState(\"00\");\r\n  const [cvc, setCvc] = useState(\"000\");\r\n  const [n, setN] = useState(\"\");\r\n  const [monthValue, setMonthValue] = useState(\"\");\r\n  const [cvcValue, setCvcValue] = useState(\"\");\r\n  const [errorText, setErrorText] = useState(\"\");\r\n  const [cvcErrorText, setCvcErrorText]=useState('')\r\n  const [nameError, setNameError]=useState('')\r\n\r\n  const formClickHandler = (e) => {\r\n    if (n === \"\") {\r\n      setErrorText('Can\\'t be blank');\r\n    }\r\n    if (cvcValue === \"\") {\r\n      setCvcErrorText('Can\\'t be blank');\r\n    }\r\n\r\n    if (n === \"\" || monthValue === \"\" || cvcValue === \"\") {\r\n      console.log(`this is n from button click is empty ${n}`);\r\n      setVisibility(false);\r\n    } else {\r\n      setVisibility(true);\r\n    }\r\n    \r\n  };\r\n\r\n  const confirmationClickHandler = () => {\r\n    setVisibility(false);\r\n    setCvcValue('')\r\n    setMonthValue('')\r\n    setCvcErrorText('')\r\n    setN('')\r\n    setErrorText('')\r\n    setMonth('00')\r\n    setYear('00')\r\n    setName('JANE APPLESEED')\r\n    setNumber('0000 0000 0000 0000')\r\n    setCvc('000')\r\n  };\r\n\r\n  const nameHandler = (e) => {\r\n  \r\n    setName((e.target.value).toUpperCase());\r\n  };\r\n\r\n  const EnterNumberHandler = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n  const EnterMonthHandler = (e) => {\r\n    setMonth(e.target.value);\r\n    if(inputMonth.length<3){\r\n      setInputMonth(e.target.value)\r\n   }\r\n    \r\n   \r\n  };\r\n  const EnterYearHandler = (e) => {\r\n    setYear(e.target.value);\r\n  };\r\n  const EnterCvcHandler = (e) => {\r\n    setCvc(e.target.value);\r\n  };\r\n  const getN = (e) => {\r\n    setN(e.target.value);\r\n  };\r\n\r\n  const getMonthValue = (e) => {\r\n    setMonthValue(e.target.value);\r\n  };\r\n  const getCvcValue = (e) => {\r\n    setCvcValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <CardBack cvc={cvc} />\r\n      <Cardfront name={name} number={number} month={month} year={year} />\r\n\r\n      {visibility ? (\r\n        <Confirmation confirmationClickHandler={confirmationClickHandler} />\r\n      ) : (\r\n        <Forms\r\n          enterNumber={EnterNumberHandler}\r\n          nameHandler={nameHandler}\r\n          formClickHandler={formClickHandler}\r\n          enterMonth={EnterMonthHandler}\r\n          month={inputMonth}\r\n          enterYear={EnterYearHandler}\r\n          enterCvc={EnterCvcHandler}\r\n          checkForN={getN}\r\n          getMonthValue={getMonthValue}\r\n          getCvcValue={getCvcValue}\r\n          errorText={errorText}\r\n          cvcErrorText={cvcErrorText}\r\n          namaError = {n}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}