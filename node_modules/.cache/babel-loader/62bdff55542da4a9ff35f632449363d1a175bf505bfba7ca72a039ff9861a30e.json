{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\MyDocuments\\\\Html\\\\react-mycard-app\\\\src\\\\Cardfront.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cardfront(_ref) {\n  let {\n    name,\n    number,\n    month,\n    year\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-front\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-shape\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"big-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"small-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"card-number-display\",\n        children: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"holders-name-display\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-date\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" \", month]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" \", year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n// import React from \"react\"\n// function CardFront(){\n\n//     import * as React from 'react';\n\n//     const themes = {\n//       light: {\n//         foreground: '#000000',\n//         background: '#eeeeee',\n//       },\n//       dark: {\n//         foreground: '#ffffff',\n//         background: '#222222',\n//       },\n//     };\n\n//     // create the context\n//     const ThemeContext = React.createContext(themes.light);\n\n//     const ThemeContext2 = React.createContext({\n//       theme: themes.light,\n//       toggleTheme: () => {},\n//     });\n\n//     export default function App() {\n//       // create a state to manage switching of themes\n//       const [darkMode, setDarkMode] = React.useState(false);\n//       const value = darkMode ? themes.dark : themes.light;\n\n//       return (\n//         // set the context default value to a provider\n//         <ThemeContext.Provider value={value}>\n//           <Toolbar changeTheme={setDarkMode} theme={darkMode} />\n//         </ThemeContext.Provider>\n//       );\n//     }\n\n//     function Toolbar({ changeTheme, theme }) {\n//       return (\n//         <div onClick={() => changeTheme(!theme)}>\n//           <ThemedButton />\n//         </div>\n//       );\n//     }\n\n//     function ThemedButton() {\n//       // request for the context current value\n//       const theme = React.useContext(ThemeContext);\n\n//       return (\n//         <button style={{ background: theme.background, color: theme.foreground }}>\n//           I am styled by theme context!\n//         </button>\n//       );\n//     }\n\n// import React, { useState } from 'react';\n// import { NavLink } from 'react-router-dom';\n// import AppRouter from './routes';\n// import './layout.css';\n\n// const CustomNavLink = ({ to, ...props }) => {\n//   let activeStyle = {\n//     textDecoration: 'underline',\n//     color: 'red',\n//     transition: 'all 4s',\n//   };\n\n//   return (\n//     <NavLink\n//       style={({ isActive }) =>\n//         isActive ? activeStyle : { textDecoration: 'none' }\n//       }\n//       to={to}\n//       end\n//       {...props}\n//     />\n//   );\n// };\n\n// function Layout() {\n//   return (\n//     <nav>\n//       <h1 className=\"logo\">Welcome to our Router Test App</h1>\n//       <CustomNavLink to=\"/\">Home</CustomNavLink>|{' '}\n//       <CustomNavLink to=\"/about\">About</CustomNavLink>|{' '}\n//       <CustomNavLink to=\"/items\">Items</CustomNavLink>|{' '}\n//       <CustomNavLink to=\"/items/new\">New Item</CustomNavLink>\n//     </nav>\n//   );\n// }\n\n// function App() {\n//   const [count, setCount] = useState(0);\n//   const [isActive, setIsActive] = useState(false);\n\n//   return (\n//     <div className=\"App\">\n//       {/* layout */}\n//       <Layout />\n\n//       {/* routes in our App */}\n//       <AppRouter />\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import { useState } from 'react';\n// import reactLogo from './assets/react.svg';\n// import './App.css';\n// import useForm from './hooks/useForm';\n\n// function App() {\n//   const [githubList, setGitHubList] = useState([]);\n\n//   // const { resetForm, inputs, handleChange } = useForm({ github: '' });\n//   // console.log(inputs);\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n\n//     let form = event.target;\n//     console.log(form);\n//     let githubInput = event.target[0];\n//     console.log(githubInput);\n//     const username = githubInput.value;\n//     // set state into the githubList array\n//     setGitHubList((prev) => {\n//       return [...prev, username];\n//     });\n//     form.reset();\n//     // use resetForm function from the useForm hook\n//     // resetForm();\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <form onSubmit={handleSubmit}>\n//         <label htmlFor=\"github\">GitHub Username</label>\n//         <input\n//           id=\"github\"\n//           type=\"text\"\n//           name=\"github\"\n//           // onChange={handleChange}\n//           // value={inputs.github}\n//         />\n//       </form>\n//       <div>\n//         <h1>Type a valid github username in the input and press enter</h1>\n//         <ul>\n//           {githubList.map((username) => {\n//             return (\n//               <li>\n//                 <a href={`https://github.com/${username}`} target=\"_blank\">\n//                   {username}\n//                 </a>\n//               </li>\n//             );\n//           })}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n_c = Cardfront;\nvar _c;\n$RefreshReg$(_c, \"Cardfront\");","map":{"version":3,"names":["React","Cardfront","name","number","month","year"],"sources":["C:/Users/PC/MyDocuments/Html/react-mycard-app/src/Cardfront.js"],"sourcesContent":["\r\nimport React from 'react'\r\n\r\nexport default function Cardfront({name, number,month,year}) {\r\n\r\n\r\n  \r\n  return (\r\n    <div>\r\n       {/* card-front///////////////////////////////////////////////////// */}\r\n       <div className=\"card-front\">\r\n        <div className=\"card-shape\">\r\n          <span className=\"big-circle\"></span>\r\n          <span className=\"small-circle\"></span>\r\n        </div>\r\n        <h1 className=\"card-number-display\">{number}</h1>\r\n        <div className=\"name-date\">\r\n          <h3 className=\"holders-name-display\" >{name}</h3>\r\n          <div className=\"card-date\">\r\n          <h3 > {month}</h3>\r\n          <h3>/</h3>\r\n          <h3 > {year}</h3>\r\n          </div>\r\n\r\n\r\n          \r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from \"react\"\r\n// function CardFront(){\r\n   \r\n\r\n//     import * as React from 'react';\r\n\r\n//     const themes = {\r\n//       light: {\r\n//         foreground: '#000000',\r\n//         background: '#eeeeee',\r\n//       },\r\n//       dark: {\r\n//         foreground: '#ffffff',\r\n//         background: '#222222',\r\n//       },\r\n//     };\r\n    \r\n//     // create the context\r\n//     const ThemeContext = React.createContext(themes.light);\r\n    \r\n//     const ThemeContext2 = React.createContext({\r\n//       theme: themes.light,\r\n//       toggleTheme: () => {},\r\n//     });\r\n    \r\n//     export default function App() {\r\n//       // create a state to manage switching of themes\r\n//       const [darkMode, setDarkMode] = React.useState(false);\r\n//       const value = darkMode ? themes.dark : themes.light;\r\n    \r\n//       return (\r\n//         // set the context default value to a provider\r\n//         <ThemeContext.Provider value={value}>\r\n//           <Toolbar changeTheme={setDarkMode} theme={darkMode} />\r\n//         </ThemeContext.Provider>\r\n//       );\r\n//     }\r\n    \r\n//     function Toolbar({ changeTheme, theme }) {\r\n//       return (\r\n//         <div onClick={() => changeTheme(!theme)}>\r\n//           <ThemedButton />\r\n//         </div>\r\n//       );\r\n//     }\r\n    \r\n//     function ThemedButton() {\r\n//       // request for the context current value\r\n//       const theme = React.useContext(ThemeContext);\r\n    \r\n//       return (\r\n//         <button style={{ background: theme.background, color: theme.foreground }}>\r\n//           I am styled by theme context!\r\n//         </button>\r\n//       );\r\n//     }\r\n    \r\n\r\n\r\n\r\n\r\n\r\n   \r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { NavLink } from 'react-router-dom';\r\n// import AppRouter from './routes';\r\n// import './layout.css';\r\n\r\n// const CustomNavLink = ({ to, ...props }) => {\r\n//   let activeStyle = {\r\n//     textDecoration: 'underline',\r\n//     color: 'red',\r\n//     transition: 'all 4s',\r\n//   };\r\n\r\n//   return (\r\n//     <NavLink\r\n//       style={({ isActive }) =>\r\n//         isActive ? activeStyle : { textDecoration: 'none' }\r\n//       }\r\n//       to={to}\r\n//       end\r\n//       {...props}\r\n//     />\r\n//   );\r\n// };\r\n\r\n// function Layout() {\r\n//   return (\r\n//     <nav>\r\n//       <h1 className=\"logo\">Welcome to our Router Test App</h1>\r\n//       <CustomNavLink to=\"/\">Home</CustomNavLink>|{' '}\r\n//       <CustomNavLink to=\"/about\">About</CustomNavLink>|{' '}\r\n//       <CustomNavLink to=\"/items\">Items</CustomNavLink>|{' '}\r\n//       <CustomNavLink to=\"/items/new\">New Item</CustomNavLink>\r\n//     </nav>\r\n//   );\r\n// }\r\n\r\n// function App() {\r\n//   const [count, setCount] = useState(0);\r\n//   const [isActive, setIsActive] = useState(false);\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       {/* layout */}\r\n//       <Layout />\r\n\r\n//       {/* routes in our App */}\r\n//       <AppRouter />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n// import { useState } from 'react';\r\n// import reactLogo from './assets/react.svg';\r\n// import './App.css';\r\n// import useForm from './hooks/useForm';\r\n\r\n// function App() {\r\n//   const [githubList, setGitHubList] = useState([]);\r\n\r\n//   // const { resetForm, inputs, handleChange } = useForm({ github: '' });\r\n//   // console.log(inputs);\r\n\r\n//   const handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n\r\n//     let form = event.target;\r\n//     console.log(form);\r\n//     let githubInput = event.target[0];\r\n//     console.log(githubInput);\r\n//     const username = githubInput.value;\r\n//     // set state into the githubList array\r\n//     setGitHubList((prev) => {\r\n//       return [...prev, username];\r\n//     });\r\n//     form.reset();\r\n//     // use resetForm function from the useForm hook\r\n//     // resetForm();\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label htmlFor=\"github\">GitHub Username</label>\r\n//         <input\r\n//           id=\"github\"\r\n//           type=\"text\"\r\n//           name=\"github\"\r\n//           // onChange={handleChange}\r\n//           // value={inputs.github}\r\n//         />\r\n//       </form>\r\n//       <div>\r\n//         <h1>Type a valid github username in the input and press enter</h1>\r\n//         <ul>\r\n//           {githubList.map((username) => {\r\n//             return (\r\n//               <li>\r\n//                 <a href={`https://github.com/${username}`} target=\"_blank\">\r\n//                   {username}\r\n//                 </a>\r\n//               </li>\r\n//             );\r\n//           })}\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAEzB,eAAe,SAASC,SAAS,OAA4B;EAAA,IAA3B;IAACC,IAAI;IAAEC,MAAM;IAACC,KAAK;IAACC;EAAI,CAAC;EAIzD,oBACE;IAAA,uBAEG;MAAK,SAAS,EAAC,YAAY;MAAA,wBAC1B;QAAK,SAAS,EAAC,YAAY;QAAA,wBACzB;UAAM,SAAS,EAAC;QAAY;UAAA;UAAA;UAAA;QAAA,QAAQ,eACpC;UAAM,SAAS,EAAC;QAAc;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAClC,eACN;QAAI,SAAS,EAAC,qBAAqB;QAAA,UAAEF;MAAM;QAAA;QAAA;QAAA;MAAA,QAAM,eACjD;QAAK,SAAS,EAAC,WAAW;QAAA,wBACxB;UAAI,SAAS,EAAC,sBAAsB;UAAA,UAAGD;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM,eACjD;UAAK,SAAS,EAAC,WAAW;UAAA,wBAC1B;YAAA,gBAAOE,KAAK;UAAA;YAAA;YAAA;YAAA;UAAA,QAAM,eAClB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAU,eACV;YAAA,gBAAOC,IAAI;UAAA;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QACX;MAAA;QAAA;QAAA;QAAA;MAAA,QAIF;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QAEF;AAEV;;AA+BA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAYA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,KAjPwBJ,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}